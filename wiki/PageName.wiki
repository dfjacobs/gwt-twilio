#summary Quick Start Guide

  * = Steps to using Twilio Client in your GWT app =
    # Add gwt-twilio.jar to your projects classpath
    # Add a link to the Twilio Client javascript file to your html file
      <code language="xml"><script type="text/javascript" src="https://static.twilio.com/libs/twiliojs/1.0/twilio.min.js"></script></code>
    # Inherit the Twilio module in your GWT Module File
       <code language="xml"><inherits name='com.xedge.twilio.GWTTwilio'/></code>
    # Start coding...


= Code Snippets =
  * Import classes
<code language="java">     import com.xedge.twilio.client.Connection;
    import com.xedge.twilio.client.ConnectionHandler;
    import com.xedge.twilio.client.Device;
    import com.xedge.twilio.client.DeviceHandler;
    import com.xedge.twilio.client.Error;
    import com.xedge.twilio.client.ErrorHandler;</code>


  * Initialize Device with a capability token
<code language="java">    Device.setup(token);</code>
 
  * Get device ready
<code language="java">    Device.ready(new DeviceHandler() {
       @Override
       public void handle(Device device) {
          //device ready
       }
    });</code>

  * Add device error handler
<code language="java">    Device.error(new ErrorHandler() {
       @Override
       public void handle(Error error) {
          //error has occured
       }
    });</code>

  * Make a call
<code language="java">    Device.connect();</code>

  * Make a call with parameters
<code language="java">    Device.connect();
    Map<String, String> params = new HashMap<String, String>();
    params.put("contact", "08233433533");
    Device.connect(params);</code>

  * Hangup on all connections
<code language="java">    Device.disconnectAll();</code>

  * Listen for incoming calls
<code language="java">    Device.connect(new ConnectionHandler() {
       @Override
       public void handle(Connection connection) {
         //Successfully established call
       }
    });</code>